type BidAccepted @entity(immutable: true) {
  id: Bytes!
  seller: Bytes! # address
  bidder: Bytes! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  quantity: BigInt! # uint64
  pricePerItem: BigInt! # uint128
  paymentToken: Bytes! # address
  bidType: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollectionBidCancelled @entity(immutable: true) {
  id: Bytes!
  bidder: Bytes! # address
  nftAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollectionBidCreatedOrUpdated @entity(immutable: true) {
  id: Bytes!
  bidder: Bytes! # address
  nftAddress: Bytes! # address
  quantity: BigInt! # uint64
  pricePerItem: BigInt! # uint128
  expirationTime: BigInt! # uint64
  paymentToken: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemCanceled @entity(immutable: true) {
  id: Bytes!
  seller: Bytes! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemListed @entity(immutable: true) {
  id: Bytes!
  seller: Bytes! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  quantity: BigInt! # uint64
  pricePerItem: BigInt! # uint128
  expirationTime: BigInt! # uint64
  paymentToken: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemSold @entity(immutable: true) {
  id: Bytes!
  seller: Bytes! # address
  buyer: Bytes! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  quantity: BigInt! # uint64
  pricePerItem: BigInt! # uint128
  paymentToken: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ItemUpdated @entity(immutable: true) {
  id: Bytes!
  seller: Bytes! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  quantity: BigInt! # uint64
  pricePerItem: BigInt! # uint128
  expirationTime: BigInt! # uint64
  paymentToken: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenApprovalStatusUpdated @entity(immutable: true) {
  id: Bytes!
  nft: Bytes! # address
  status: Int! # uint8
  paymentToken: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenBidCancelled @entity(immutable: true) {
  id: Bytes!
  bidder: Bytes! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenBidCreatedOrUpdated @entity(immutable: true) {
  id: Bytes!
  bidder: Bytes! # address
  nftAddress: Bytes! # address
  tokenId: BigInt! # uint256
  quantity: BigInt! # uint64
  pricePerItem: BigInt! # uint128
  expirationTime: BigInt! # uint64
  paymentToken: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateCollectionOwnerFee @entity(immutable: true) {
  id: Bytes!
  _collection: Bytes! # address
  _recipient: Bytes! # address
  _fee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateFee @entity(immutable: true) {
  id: Bytes!
  fee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateFeeRecipient @entity(immutable: true) {
  id: Bytes!
  feeRecipient: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateFeeWithCollectionOwner @entity(immutable: true) {
  id: Bytes!
  fee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpdateSalesTracker @entity(immutable: true) {
  id: Bytes!
  _priceTrackerAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
